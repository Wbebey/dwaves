name: "Deploy dwaves-app to GCS"
description: "Deploy dwaves-app to GCS"
runs:
    using: composite
    steps:
      - name: GCP authentification ü§ë
        uses: google-github-actions/setup-gcloud@v0
        with:
          service_account_key: ${{ env.GCP_SA_KEY }}
          project_id: ${{ env.GCP_PROJECT_ID }}

      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: NPM install
        working-directory:  ${{ env.PROJECT_DIRECTORY }}
        shell: bash
        run: |-
          npm install

      - name: install doppler cli 
        working-directory:  ${{ env.PROJECT_DIRECTORY }}
        shell: bash
        run: |-
          sudo apt-get update && sudo apt-get install -y apt-transport-https ca-certificates curl gnupg
          curl -sLf --retry 3 --tlsv1.2 --proto "=https" 'https://packages.doppler.com/public/cli/gpg.DE2A7741A397C129.key' | sudo apt-key add -
          echo "deb https://packages.doppler.com/public/cli/deb/debian any-version main" | sudo tee /etc/apt/sources.list.d/doppler-cli.list
          sudo apt-get update && sudo apt-get install doppler

      - name: Download environment variables üåé
        working-directory:  ${{ env.PROJECT_DIRECTORY }}
        shell: bash
        run: |-
          source ${{ env.PROPERTIES_SCRIPT }} && get_environment_properties
          echo "Downloading environment variables from doppler..."
          cat $DOPPLER_TOKEN
          doppler secrets download --config doppler.yaml --no-file --token $DOPPLER_TOKEN --format env > .env
          cat .env
          head .env
          tail .env
      # - name: Retrieve environment variables üåé
      #   working-directory:  ${{ env.PROJECT_DIRECTORY }}
      #   shell: bash
      #   run: |-
      #     source ${{ env.PROPERTIES_SCRIPT }} && doppler_setup
      #     cat .env 
      #     head .env
      #     tail .env
      #     tail -n +4 .env > .new_env && mv .new_env .env

      - name: Export build date üìÖ
        working-directory:  ${{ env.PROJECT_DIRECTORY }}
        shell: bash
        run: |-
          source ${{ env.PROPERTIES_SCRIPT }} && export_build_date

      - name: Export commit url üì•
        working-directory:  ${{ env.PROJECT_DIRECTORY }}
        shell: bash
        run: |-
          source ${{ env.PROPERTIES_SCRIPT }} && export_commit_url

      - name: Build üèó
        working-directory:  ${{ env.PROJECT_DIRECTORY }}
        shell: bash
        run: |-
          ls -la
          cat .env
          cp .env .new_env
          cat .new_env
          head .new_env
          CI="false" npm run deploy-build

      - name: Deploy  üöÄ
        working-directory:  ${{ env.PROJECT_DIRECTORY }}
        shell: bash
        run: |-
          source ${{ env.PROPERTIES_SCRIPT }} && get_environment_properties
          export gcp_environment="${{ env.APP }}-$ENVIRONMENT"
          export deploy_url=$BUCKET_NAME
          gsutil rsync -R build/ gs://$deploy_url
          echo "Deployed to $gcp_environment environment: $deploy_url"