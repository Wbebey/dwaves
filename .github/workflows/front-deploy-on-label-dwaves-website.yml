name: Deploy Dwaves-website on Label

on:
  pull_request:
    types: [labeled]
    branches: [staging]
    paths:
      - frontend/dwaves-website/**

env:
    APP: dwaves-website
    ENVIRONMENT: test
    DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
    DISCORD_TEAM_ID: ${{ secrets.DISCORD_FRONT_TEAM_ID }} 
    NODE_VERSION: 16.x
    GCP_SA_KEY: ${{ secrets.TF_SA }}
    GCP_PROJECT_ID: ${{ secrets.DWAVES_PROJECT_ID }}
    FRONT_ENV: ${{ secrets.FRONT_ENV }}
    TEST_URL: ${{ secrets.DWAVES_WEBSITE_TEST_URL }}

defaults:
    run:
        working-directory: "frontend/dwaves-website"

jobs:
  remove-label:
    name: Remove Label
    if: ${{ github.event.label.name == 'deploy-dwaves-front-test' }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Remove Label from PR
        uses: actions-ecosystem/action-remove-labels@v1.3.0
        with:
          labels: ${{ github.event.label.name }}
          github_token: ${{ secrets.GITHUB_TOKEN }}

  deploy:
    name: Deploy
    if: ${{ github.event.label.name == 'deploy-dwaves-front-test' }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    environment:
      name: dwaves-website-test
      url: https://dwaves-test.tonfrere.fr
    steps:
      - name: Checkout 😇
        uses: actions/checkout@v3

      - name: GCP authentification 🤑
        uses: google-github-actions/setup-gcloud@v0
        with:
          service_account_key: ${{ env.GCP_SA_KEY }}
          project_id: ${{ env.GCP_PROJECT_ID }}

      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Retrieve environment for ${{ env.ENVIRONMENT }} 🌎
        run: echo "${{ env.FRONT_ENV }}" > .env

      - name: Install dependencies 📦
        run: npm install

      - name: Build 🏗
        run: CI='false' npm run build

      - name: Deploy Production 🚀
        if: ${{ github.ref }} == 'refs/heads/staging'
        run: |-
          export environment="${{ env.APP }}-${{ env.ENVIRONMENT }}"
          export deploy_url=${{ env.TEST_URL }}
          gsutil rsync -R build/ gs://$deploy_url
          echo "Deployed to $environment environment: $deploy_url"

      - name: Discord notification on failure
        if: failure()
        uses: ./.github/actions/discord/notification-on-failure