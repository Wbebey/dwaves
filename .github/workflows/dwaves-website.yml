name: Dwaves-website  

on:
    push:
        paths:
            - frontend/dwaves-website/**
    pull_request:
      types: [labeled]
      branches: [staging]
      paths:
        - frontend/dwaves-website/**
    workflow_dispatch:
      inputs:
        paths:
          description: 'Paths to run the workflow on'
          required: true
          default: 'frontend/dwaves-website/**'

env:
    APP: dwaves-website
    NODE_VERSION: 16.x
    APP_COMMIT_URL: ${{ secrets.APP_COMMIT_URL_FRONT }}
    APP_BUILD_DATE: ${{ secrets.APP_BUILD_DATE_FRONT }}
    GITHUB_REPOSITORY: ${{ github.repository }}
    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    PROJECT_DIRECTORY: frontend/dwaves-website
    DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
    DISCORD_TEAM_ID: ${{ secrets.DISCORD_FRONT_TEAM_ID }} 
    SONAR_PROJECT_BASE_DIR: frontend/dwaves-website/
    SONAR_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_DWAVES_WEBSITE }}
    SONAR_PROJECT_KEY: ${{ secrets.DWAVES_WEBSITE_PROJECT_KEY }}
    GCP_SA_KEY: ${{ secrets.TF_SA }}
    GCP_PROJECT_ID: ${{ secrets.DWAVES_PROJECT_ID }}
    PRODUCTION_URL: ${{ secrets.DWAVES_WEBSITE_PRODUCTION_URL }}
    STAGING_URL: ${{ secrets.DWAVES_WEBSITE_STAGING_URL }}
    TEST_URL: ${{ secrets.DWAVES_WEBSITE_TEST_URL }}
    TOKEN_STG_DOPPLER: ${{ secrets.DOPPLER_DWAVES_WEBSITE_TOKEN_STG }}
    TOKEN_PRD_DOPPLER: ${{ secrets.DOPPLER_DWAVES_WEBSITE_TOKEN_PRD }}
    TOKEN_TEST_DOPPLER: ${{ secrets.DOPPLER_DWAVES_WEBSITE_TOKEN_TEST }}
    PROPERTIES_SCRIPT: ${{ GITHUB.WORKSPACE }}/.github/script/environment.sh

defaults:
    run:
        working-directory: "frontend/dwaves-website"

jobs:
    remove-label:
      name: Remove Label
      if: ${{ github.event.label.name == 'deploy-dwaves-front-test' }}
      runs-on: ubuntu-latest
      permissions:
        contents: read
        pull-requests: write
      steps:
        - name: Checkout
          uses: actions/checkout@v3
          with:
            ref: ${{ github.event.pull_request.head.sha }}

        - name: Remove Label from PR
          uses: actions-ecosystem/action-remove-labels@v1.3.0
          with:
            labels: ${{ github.event.label.name }}
            github_token: ${{ env.GITHUB_TOKEN }}

    deploy-test:
      name: Deploy to test environment üöÄ
      if: ${{ github.event.label.name == 'deploy-dwaves-front-test' }}
      runs-on: ubuntu-latest
      permissions:
        contents: read
        pull-requests: write
      environment:
        name: dwaves-website-test
        url: https://dwaves-test.tonfrere.fr
      steps:
        - name: Checkout üòá
          uses: actions/checkout@v3

        - name: Deploy to GCP üöÄ
          uses: ./.github/actions/frontend/deployment

    integration-test:
        name: Integretion Test
        runs-on: ubuntu-latest
        if: github.ref == 'refs/heads/main' || 
            github.ref == 'refs/heads/staging' || 
            startsWith(github.ref, 'refs/heads/feature/') || 
            startsWith(github.ref, 'refs/heads/bugfix/') || 
            startsWith(github.ref, 'refs/heads/hotfix/')
        steps:
            - name: Checkout üòá
              uses: actions/checkout@v3

            - name: Integration Tests üèó
              uses: ./.github/actions/frontend/integration-test

            - name: Discord notification on failure
              if: failure()
              uses: ./.github/actions/discord/notification-on-failure

    unit-test:
        name: Unit Test
        runs-on: ubuntu-latest
        if: github.ref == 'refs/heads/main' || 
            github.ref == 'refs/heads/staging' || 
            startsWith(github.ref, 'refs/heads/feature/') || 
            startsWith(github.ref, 'refs/heads/bugfix/') || 
            startsWith(github.ref, 'refs/heads/hotfix/')
        steps:

            - name: Checkout üòá
              uses: actions/checkout@v3

            - name: Unit Test üß™
              uses: ./.github/actions/frontend/unit-test

            - name: Discord notification on failure
              if: failure()
              uses: ./.github/actions/discord/notification-on-failure

    build:
      name: Build üèó
      if: github.ref == 'refs/heads/main' || 
          github.ref == 'refs/heads/staging' || 
          startsWith(github.ref, 'refs/heads/feature/') || 
          startsWith(github.ref, 'refs/heads/bugfix/') || 
          startsWith(github.ref, 'refs/heads/hotfix/')
      runs-on: ubuntu-latest
      needs: [unit-test, integration-test]
      steps:
          - name: Checkout üòá
            uses: actions/checkout@v3
  
          - name: Build Application üß™
            uses: ./.github/actions/frontend/build

          - name: Discord notification on failure
            if: failure()
            uses: ./.github/actions/discord/notification-on-failure

    code-analysis:
        name: Code Analysis
        runs-on: ubuntu-latest
        if: github.ref == 'refs/heads/main' || 
            github.ref == 'refs/heads/staging' || 
            startsWith(github.ref, 'refs/heads/feature/') || 
            startsWith(github.ref, 'refs/heads/bugfix/') || 
            startsWith(github.ref, 'refs/heads/hotfix/')
        permissions: 
            contents: read
            pull-requests: write
        needs: [build]
        steps:
            - name: Checkout üòá
              uses: actions/checkout@v3

            - name: SonarCloud Scan
              uses: ./.github/actions/sonarcloud

            - name: Discord notification on success
              if: success()
              uses: ./.github/actions/discord/notification-on-success

            - name: Discord notification on failure
              if: failure()
              uses: ./.github/actions/discord/notification-on-failure

    deploy:
        name: Deploy to GCP üöÄ
        needs: [code-analysis]
        if: github.ref == 'refs/heads/main' ||
            github.ref == 'refs/heads/staging' 
        runs-on: ubuntu-latest
        environment: dwaves-website
        permissions:
          contents: read
          pull-requests: write
        steps:
            - name: Checkout üòá
              uses: actions/checkout@v3

            - name: Discord notification Deployment started
              uses: ./.github/actions/discord/notification-on-start-deployment

            - name: Deploy to GCP üöÄ
              uses: ./.github/actions/frontend/deployment

            - name: Discord notification on success
              if: success()
              uses: ./.github/actions/discord/notification-on-success

            - name: Discord notification on failure
              if: failure()
              uses: ./.github/actions/discord/notification-on-failure