name: Dwaves-api

on:
  push:
    paths:
      - backend/api/**
  pull_request:
    types: [labeled]
    branches: [staging]
    paths:
      - backend/api/**

env:
    APP: dwaves-api
    NODE_VERSION: 16.x
    GITHUB_REF: ${{ github.ref }}
    GITHUB_SHA: ${{ github.sha }}
    GITHUB_REPOSITORY: ${{ github.repository }}
    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    PROJECT_DIRECTORY: backend/api
    APP_COMMIT_URL: ${{ secrets.APP_COMMIT_URL_BACK }}
    APP_BUILD_DATE: ${{ secrets.APP_BUILD_DATE_BACK }}
    DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
    DISCORD_TEAM_ID: ${{ secrets.DISCORD_BACK_TEAM_ID }} 
    SONAR_PROJECT_BASE_DIR: backend/api/
    SONAR_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_DWAVES_API }}
    SONAR_PROJECT_KEY: ${{ secrets.DWAVES_API_PROJECT_KEY }}
    GCP_SA_KEY: ${{ secrets.TF_SA }}
    GCP_PROJECT_ID: ${{ secrets.DWAVES_PROJECT_ID }}
    DOPPLER_TOKEN_STG: ${{ secrets.DOPPLER_DWAVES_API_TOKEN_STG }}
    DOPPLER_TOKEN_PRD: ${{ secrets.DOPPLER_DWAVES_API_TOKEN_PRD }}
    DOPPLER_TOKEN_TEST: ${{ secrets.DOPPLER_DWAVES_API_TOKEN_TEST }}
    PROPERTIES_SCRIPT: ${{ GITHUB.WORKSPACE }}/.github/script/environment.sh

defaults:
  run:
    working-directory: "backend/api"

jobs:
  remove-label:
    name: Remove Label
    if: ${{ github.event.label.name == 'deploy-dwaves-api-test' }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Remove Label from PR
        uses: actions-ecosystem/action-remove-labels@v1.3.0
        with:
          labels: ${{ github.event.label.name }}
          github_token: ${{ env.GITHUB_TOKEN }}

  deploy-test:
    name: Deploy to test environment üöÄ
    if: ${{ github.event.label.name == 'deploy-dwaves-api-test' }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    environment:
      name: dwaves-api-test
      url: https://dwaves-api-test.tonfrere.fr
    steps:
      - name: Checkout üòá
        uses: actions/checkout@v3

      - name: Deploy to GCP üöÄ
        uses: ./.github/actions/backend/deployment

  integration-test:
    name: Integretion Test
    if: github.ref == 'refs/heads/main' || 
        github.ref == 'refs/heads/staging' || 
        startsWith(github.ref, 'refs/heads/feature/') || 
        startsWith(github.ref, 'refs/heads/bugfix/') || 
        startsWith(github.ref, 'refs/heads/hotfix/')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout üòá
        uses: actions/checkout@v3

      - name: Integration Tests üèó
        uses: ./.github/actions/frontend/integration-test

      - name: Discord notification on failure
        if: failure()
        uses: ./.github/actions/discord/notification-on-failure

  unit-test:
    name: Unit Test
    if: github.ref == 'refs/heads/main' || 
        github.ref == 'refs/heads/staging' || 
        startsWith(github.ref, 'refs/heads/feature/') || 
        startsWith(github.ref, 'refs/heads/bugfix/') || 
        startsWith(github.ref, 'refs/heads/hotfix/')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout üòá
        uses: actions/checkout@v3

      - name: Unit Test üß™
        uses: ./.github/actions/frontend/unit-test

      - name: Discord notification on failure
        if: failure()
        uses: ./.github/actions/discord/notification-on-failure

  build:
    name: Build üèó
    if: github.ref == 'refs/heads/main' || 
        github.ref == 'refs/heads/staging' || 
        startsWith(github.ref, 'refs/heads/feature/') || 
        startsWith(github.ref, 'refs/heads/bugfix/') || 
        startsWith(github.ref, 'refs/heads/hotfix/')
    runs-on: ubuntu-latest
    needs: [unit-test, integration-test]
    steps:
        - name: Checkout üòá
          uses: actions/checkout@v3

        - name: Build Application üß™
          uses: ./.github/actions/backend/build

        - name: Discord notification on failure
          if: failure()
          uses: ./.github/actions/discord/notification-on-failure

  code-analysis:
    name: Code Analysis
    if: github.ref == 'refs/heads/main' || 
        github.ref == 'refs/heads/staging' || 
        startsWith(github.ref, 'refs/heads/feature/') || 
        startsWith(github.ref, 'refs/heads/bugfix/') || 
        startsWith(github.ref, 'refs/heads/hotfix/')
    runs-on: ubuntu-latest
    needs: [build]
    permissions: 
      contents: read
      pull-requests: write
    steps:
      - name: Checkout üòá
        uses: actions/checkout@v3

      - name: SonarCloud Scan
        uses: ./.github/actions/sonarcloud

      - name: Discord notification on failure
        if: failure()
        uses: ./.github/actions/discord/notification-on-failure

  deploy:
    name: Deployment
    if: github.ref == 'refs/heads/main' ||
        github.ref == 'refs/heads/staging' 
    needs: [code-analysis]
    environment: dwaves-api
    permissions:
      contents: read
      pull-requests: write
    runs-on: ubuntu-latest
    steps:
      - name: Checkout üòá
        uses: actions/checkout@v3

      - name: Discord notification Deployment started
        uses: ./.github/actions/discord/notification-on-start-deployment

      - name: Deploy to GCP üöÄ
        uses: ./.github/actions/backend/deployment

      - name: Discord notification on success
        if: success()
        uses: ./.github/actions/discord/notification-on-success

      - name: Discord notification on failure
        if: failure()
        uses: ./.github/actions/discord/notification-on-failure