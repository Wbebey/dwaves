name: Test & Analysis & Deploy - Dwaves-app 🚀 

on:
  push:
    branches: 
      - feature/*
      - bugfix/*
      - hotfix/*
    paths:
      - frontend/dwaves-app/**
  # pull_request:
  #   types: [opened, synchronize, reopened]
  #   branches:
  #     - staging
  #   paths:
  #     - ${{ env.WORKING_DIRECTORY }}/**

defaults:
  run:
    working-directory: "frontend/dwaves-app"

jobs:
  integration-tests:
    name: Integretion Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]
    steps:
      # - name: Trigger Message 📥
      #   run: |-
      #     echo " The job was automatically triggered by a ${{ github.event_name }} event by ${{ github.actor }}."
      #     echo "This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      #     echo "The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."

      - name: Checkout 😇
        uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
            node-version: ${{ matrix.node-version }}

      - name: Environment variables 🧪
        # working-directory: ./frontend/dwaves-app
        run: |-
          sed -i 's/localhost:3000/${{ secrets.STAGING_ADDRESS }}/g' src/Pages/Player.tsx

      - name: Integartion Tests 🏗
        # working-directory: ./frontend/dwaves-app
        run: |-
          npm install
          echo "Running  integration tests..."

  unit-test:
    name: Unit Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]
    steps:

      - name: Checkout 😇
        uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
            node-version: ${{ matrix.node-version }}

      - name: Environment variables 🧪
        # working-directory: ./frontend/dwaves-app
        run: |-
          sed -i 's/localhost:3000/${{ secrets.STAGING_ADDRESS }}/g' src/Pages/Player.tsx

      - name: Unit Test 🧪
        # working-directory: ./frontend/dwaves-app
        run: |-
          npm install
          echo "Running  unit tests..."


  code-analysis:
    name: Code Analysis
    runs-on: ubuntu-latest
    needs: [integration-tests, unit-test]
    steps:
      - name: Checkout 😇
        uses: actions/checkout@v3

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [code-analysis]
    strategy:
      matrix:
        node-version: [16.x]
    steps:
      - name: Checkout 😇
        uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Build 🏗
        # working-directory: ./frontend/dwaves-app
        run: |-
          npm install
          CI='false' npm run build 