name: Deploy Dwaves-api on Label

on:
  pull_request:
    types: [labeled]
    branches: [staging]
    paths:
      - backend/api/**

env:
    APP: dwaves-api
    ENVIRONMENT: test
    NODE_VERSION: 16.x
    PROJECT_DIRECTORY: backend/api
    SONAR_PROJECT_BASE_DIR: backend/api/
    SONAR_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_DWAVES_API }}
    SONAR_PROJECT_KEY: ${{ secrets.DWAVES_API_PROJECT_KEY }}
    GCP_SA_KEY: ${{ secrets.TF_SA }}
    GCP_PROJECT_ID: ${{ secrets.DWAVES_PROJECT_ID }}
    ENV_VARS: ${{ secrets.DWAVES_API_TEST_ENV }}
    DOCKER_TAG: gcr.io/${{ secrets.DWAVES_PROJECT_ID }}/dwaves-api-test:${{ github.sha }}

defaults: 
    run:
        working-directory: "backend/api"

jobs:
  remove-label:
    name: Remove Label
    if: ${{ github.event.label.name == 'deploy-dwaves-api-test' }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Remove Label from PR
        uses: actions-ecosystem/action-remove-labels@v1.3.0
        with:
          labels: ${{ github.event.label.name }}
          github_token: ${{ secrets.GITHUB_TOKEN }}

  deploy:
    name: Deploy
    if: ${{ github.event.label.name == 'deploy-dwaves-api-test' }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    environment:
      name: dwaves-api-test
    steps:
      - name: Checkout üòá
        uses: actions/checkout@v3

      - name: GCP authentification ü§ë
        uses: google-github-actions/setup-gcloud@v0
        with:
          service_account_key: ${{ env.GCP_SA_KEY }}
          project_id: ${{ env.GCP_PROJECT_ID }}

      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Retrieve environment for ${{ env.ENVIRONMENT }} üåé
        run: echo "${{ env.ENV_VARS }}" > .env

      - name: Build üèó
        run: |-
          docker build . \
            -f ${{ GITHUB.WORKSPACE }}/${{ env.PROJECT_DIRECTORY }}/Dockerfile \
            -t ${{ env.DOCKER_TAG }} \
            --build-arg ENVIRONMENT=${{ env.ENVIRONMENT }} \
            --build-arg BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ') \
            --build-arg BUILD_NUMBER=${{ github.run_number }} \
            --build-arg BUILD_URL=${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}

      - name: Publish to Container registry üõ´
        run: |-
          echo "Pushing image ${{ env.DOCKER_TAG }} to google cloud container registry..."
          gcloud auth configure-docker --quiet
          docker push ${{ env.DOCKER_TAG }}

      - name: Deploy to cloud run üöÄ
        run: |-
          gcloud run deploy ${{ env.APP }}-${{ env.ENVIRONMENT }} \
            --image ${{ env.DOCKER_TAG }} \
            --platform managed \
            --region europe-west1 \
            --allow-unauthenticated \
            --cpu 1000m \
            --memory 512Mi \
            --timeout 300 \
            --project ${{ env.GCP_PROJECT_ID }}